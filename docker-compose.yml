version: "3.9"

services:
  api:
    build:
      args:
        RUBY_VERSION: ${RUBY_VERSION}
      context: .
      dockerfile: ./docker/rails/Dockerfile
    restart: always
    command: [ "tail", "-f", "/dev/null" ]
    environment:
      MYHEARTY_DB_USER: ${POSTGRES_USER}
      MYHEARTY_DB_PASSWORD: ${POSTGRES_PASSWORD}
      MYHEARTY_DB_HOST: ${POSTGRES_HOST}
    ports:
      - "3000:3000"
      # Ports required for RubyMine debugging
      - "1234:1234"
      - "26166:26168"
    volumes:
      - .:/api
    depends_on:
      - db

  db:
    image: postgres:${POSTGRES_VERSION}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: myhearty_development
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      default:
        aliases:
          - ${POSTGRES_HOST}

  redis:
    image: redis:${REDIS_VERSION}
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/var/lib/redis/data

  sidekiq:
    build:
      args:
        RUBY_VERSION: ${RUBY_VERSION}
      context: .
      dockerfile: ./docker/rails/Dockerfile
    restart: always
    command: [ "bundle", "exec", "sidekiq", "-c", "2" ]
    volumes:
      - .:/api
    depends_on:
      - redis

  typesense:
    image: typesense/typesense:${TYPESENSE_VERSION}
    restart: always
    environment:
      TYPESENSE_DATA_DIR: /data
      TYPESENSE_API_KEY: ${TYPESENSE_API_KEY}
    ports:
      - "8108:8108"
    volumes:
      - typesense:/data

  nginx:
    image: nginx:${NGINX_VERSION}
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/nginx/certs:ro
    depends_on:
      - api

volumes:
  api:
  postgres:
  redis:
  typesense:
